type Filled @entity(immutable: true) {
  id: Bytes!
  swapper: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Cancelled @entity(immutable: true) {
  id: Bytes!
  swapper: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ERC721ForERC20Proposal @entity(immutable: true) {
  id: Bytes!
  swapper: String! # address
  seller: String! # address
  buyer: String! # address
  param3_parties_seller: Bytes! # address
  param3_parties_buyer: Bytes! # address
  param3_offer_addr: Bytes! # address
  param3_offer_id: BigInt! # uint256
  param3_consideration_thirdParty: [ThirdParty!] # tuple[]
  param3_consideration_maxPlatformFee: BigInt! # uint256
  param3_consideration_total: BigInt! # uint256
  param3_consideration_currency: Bytes! # address
  param3_validUntilTime: BigInt! # uint256
  salt: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ERC721ForNativeProposal @entity(immutable: true) {
  id: Bytes!
  swapper: String! # address
  seller: String! # address
  buyer: String! # address
  param3_parties_seller: Bytes! # address
  param3_parties_buyer: Bytes! # address
  param3_offer_addr: Bytes! # address
  param3_offer_id: BigInt! # uint256
  param3_consideration_thirdParty: [ThirdParty!] # tuple[]
  param3_consideration_maxPlatformFee: BigInt! # uint256
  param3_consideration_total: BigInt! # uint256
  param3_validUntilTime: BigInt! # uint256
  salt: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Debug @entity {
  id: ID!
  message: String!
  value: String!
  blockNumber: String!
}

type ThirdParty @entity {
  id: ID!
  to: Bytes!
  amount: BigInt!
}

type MultiERC721Token @entity {
  id: ID!
  addr: String!
  ids: [BigInt!]!
}

type MultiERC721ForERC20Proposal @entity(immutable: true) {
  id: Bytes!
  swapper: String! # address
  seller: String! # address
  buyer: String! # address
  param3_parties_seller: Bytes! # address
  param3_parties_buyer: Bytes! # address
  param3_offer: [MultiERC721Token!]! # tuple[]
  param3_consideration_thirdParty: [ThirdParty!] # tuple[]
  param3_consideration_maxPlatformFee: BigInt! # uint256
  param3_consideration_total: BigInt! # uint256
  param3_consideration_currency: Bytes! # address
  param3_validUntilTime: BigInt! # uint256
  salt: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MultiERC721ForNativeProposal @entity(immutable: true) {
  id: Bytes!
  swapper: String! # address
  seller: String! # address
  buyer: String! # address
  param3_parties_seller: Bytes! # address
  param3_parties_buyer: Bytes! # address
  param3_offer: [MultiERC721Token!]! # tuple[]
  param3_consideration_thirdParty: [ThirdParty!] # tuple[]
  param3_consideration_maxPlatformFee: BigInt! # uint256
  param3_consideration_total: BigInt! # uint256
  param3_validUntilTime: BigInt! # uint256
  salt: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PlatformFeeChanged @entity(immutable: true) {
  id: Bytes!
  recipient: Bytes! # address
  basisPoints: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
